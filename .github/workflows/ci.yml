name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/versatiles-org/versatiles-svelte-playwright-testing:latest

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22

      - name: Init cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Install
        run: npm install

      - name: Build the project
        run: npm run build

      - name: Lint
        run: npx eslint --color .

      - name: Test Code
        run: npx vitest run --testTimeout 10000

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare Playwright
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          load: true
          tags: ${{ env.IMAGE_NAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: docker/stable-slim.Dockerfile

      - name: Test Playwright
        run: docker run -v $(pwd)/src:/code/src -v $(pwd)/static:/code/static -v $(pwd)/playwright-tests:/code/playwright-tests -v $(pwd)/test-results:/code/test-results --ipc=host --rm ${{ env.IMAGE_NAME }} /bin/bash -c "npx playwright test --update-snapshots patch"

      - name: Upload Playwright Test Results
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          path: test-results
          name: playwright-test-report

      - name: Generate test coverage
        run: npm run test-coverage

      - name: Upload test coverage
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
